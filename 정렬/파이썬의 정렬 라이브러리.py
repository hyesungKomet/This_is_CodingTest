# sorted()는 퀵 정렬과 동작 방식이 비슷한 병합 정렬 기반으로 만들어짐
# 병합 정렬은 퀵 정렬보다 느리지만 최악에도 O(NlogN)이 보장됨!
# sorted() 함수는 리스트, 딕셔너리 등을 입력받아서 정렬된 리스트 반환!

# 문제에서 별도의 요구사항이 없으면 이 라이브러리 사용!
# 데이터 범위가 한정적이고 더 빨라야 되면 계수 정렬!

# 문제 유형
# 1. 정렬 라이브러리로 풀 수 있는 문제
# 2. 정렬 알고리즘 원리를 묻는 문제 - 선택, 삽입, 퀵 등의 원리 알아야 함!
# 3. 더 빠른 정렬이 필요한 문제 - 퀵 정렬 기반 정렬 기법으로 풀 수 X
#                                 다른 정렬이나 기존 알고리즘의 개선 필요
array = [7,5,9,0,3,1,6,2,4,8]

result = sorted(array)
# sort()라는 리스트의 내장함수를 이용해도 됨
array.sort()

print(result)
print(array)


# sorted()에는 key 매개변수를 입력으로 받을 수 있다
# 정렬의 기준이 되며 함수가 들어가야 함!
arr = [('바나나', 2), ('사과', 5), ('당근', 3)]

def setting(data):
    return data[1]

tot = sorted(arr, key=setting)
print(tot)
