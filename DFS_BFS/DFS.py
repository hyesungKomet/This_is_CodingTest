# DFS(Depth-First Search): 깊이 우선 탐색
# 재귀함수로 간단히 구현가능
# 재귀함수 사용시 연속해서 호출되는 함수는 메인메모리의 스택공간에 적재되므로
# 재귀함수의 수행은 내부적으로(컴퓨터 구조 상으로) 스택 자료구조와 동일

# 1. 탐색 시작 노드를 스택에 삽입하고 방문처리한다
# 2. 스택의 최상단 노드에 방문하지 않은 인접노드 있으면 이를 스택에 넣고 방문처리한다
#    방문하지 않은 인접노드가 없으면 최상단 노드를 스택에서 꺼낸다
# 3. 더 이상 수행할 수 없을 때까지 2번을 반복한다

#DFS method 정의
def dfs(graph, v, visited):
    #현재 노드 방문처리
    visited[v] = True
    print(v, end=' ')
    #인접노드 재귀적으로 방문
    for i in graph[v]:
        if not visited[i]:
            dfs(graph, i, visited)

# 2차원 리스트로 그래프 표시
# 인접 행렬 말고 인접 리스트 방식으로 각 노드에 연결된 노드 정보 담음
graph = [
    [],
    [2,3,8],
    [1,7],
    [1,4,5],
    [3,5],
    [3,4],
    [7],
    [2,6,8],
    [1,7]
]

visited = [False] * 9

dfs(graph, 1, visited)
